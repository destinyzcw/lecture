## Reading questions

1.  A given program spends 10% of its time in an initial startup
    phase, and then 90% of its time in work that can be easily
    parallelized.  Assuming a machine with homogeneous cores, plot the
    idealized speedup and parallel efficiency of the overall code
    according to Amdahl's law for up to 128 cores.  If you know how,
    you should use a script to produce this plot, with both the serial
    fraction and the maximum number of cores as parameters.
    
    let s_up be the speede up
        f_s be the fraction of serial
        p be the number of core used
        e be the efficiency 
        then
            s_up=1 / (0.1 + f_s + (0.9 - f_s) / p);
            e = s_up / p = (1 / ((0.1 + f_s + (0.9 - f_s) / p) / p);
            the plots are listed below

2.  Suppose a particular program can be partitioned into perfectly
    independent tasks, each of which takes time tau.  Tasks are
    set up, scheduled, and communicated to p workers at a (serial)
    central server; this takes an overhead time alpha per task.
    What is the theoretically achievable throughput (tasks/time)?
    
    let n_t be the number of tasks
        t_alpha be the time overhead
        then 
            throughput = n_t / (tau + n_t * t_alpha);

3.  Under what circumstances is it best to not tune?
    
    the time takes before tune is that t_0 = n_t * tau
    the time takes after tune is that t_t = tau + n_t * t_alpha
    if t_0 < t_t or tau < (n_t - 1) * t_alpha / n_t 
    it is better to not tune;
    
4.  The class cluster consists of eight nodes and fifteen Xeon Phi
    accelerator boards.  Based on an online search for information on
    these systems, what do you think is the theoretical peak flop rate
    (double-precision floating point operations per second)?  Show how
    you computed this, and give URLs for where you got the parameters
    in your calculation.  (We will return to this question again after
    we cover some computer architecture.)
     
     As is said in [1] a Xeon Phi processor have the performance of 1.2 double-precision teraFLOPS.
     Therefore, the cluster consists of eight nodes and fifteen Xeon Phi will hava 8*15*1.2teraFLOPS = 144teraFLOPS
     
    [1] http://www.intel.com/content/www/us/en/processors/xeon/xeon-phi-coprocessor-overview.html
    
5.  What is the approximate theoretical peak flop rate for your own machine?
    
     Form the equation listed on WiKi and "Most microprocessors today can carry out 4 FLOPs per clock cycle"
    and my processor is 2.7 GHz Intel Core i5 with 2 cores.
    Therefore, the performance of my computer should be 2*2.7*4 gigaFLOPS = 21.6 gigaFLOPS
    
    [1]https://en.wikipedia.org/wiki/FLOPS
